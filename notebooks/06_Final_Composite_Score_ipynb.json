{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"J8ObeQK3c4kR","executionInfo":{"status":"ok","timestamp":1746465429944,"user_tz":240,"elapsed":8902,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from google.colab import drive\n","from sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\n","from sklearn.linear_model import Ridge, Lasso, LinearRegression\n","from sklearn.tree import DecisionTreeRegressor\n","from sklearn.neighbors import KNeighborsRegressor\n","from xgboost import XGBRegressor\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n","import os\n","import xgboost as xgb\n","from sklearn.model_selection import train_test_split, ParameterSampler\n","from sklearn.metrics import (\n","    f1_score, accuracy_score, precision_score, recall_score\n",")\n"]},{"cell_type":"code","source":["drive.mount('/content/drive',force_remount=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kRhZ17XjbQct","executionInfo":{"status":"ok","timestamp":1746465467664,"user_tz":240,"elapsed":37722,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}},"outputId":"a56dbcc1-b794-488a-a054-153b1e705e83"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["fundamental_df = pd.read_csv('/content/drive/My Drive/StockDashboard_Automation/ExportToGitHub/fundamental_scores.csv')\n","technical_df = pd.read_csv('/content/drive/My Drive/StockDashboard_Automation/ExportToGitHub/technical_scores.csv')\n","news_df = pd.read_csv('/content/drive/My Drive/StockDashboard_Automation/ExportToGitHub/news_sentiment.csv')\n","\n","fundamental_df['date'] = pd.to_datetime(fundamental_df['date'])\n","fundamental_df.rename(columns={\"fundamental score\": \"fundamental_score\"}, inplace=True)\n","\n","technical_df['date'] = pd.to_datetime(technical_df['date'])\n","news_df['date'] = pd.to_datetime(news_df['date'])\n","\n","main_df = pd.merge(fundamental_df, technical_df, on='date', how='inner')\n","main_df = pd.merge(main_df, news_df, on='date', how='inner')\n","\n","main_df = main_df.sort_values('date').reset_index(drop=True)\n"],"metadata":{"id":"CbUB1oAUbYzt","executionInfo":{"status":"ok","timestamp":1746465469589,"user_tz":240,"elapsed":1927,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["main_df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IXLJLnmHdEvh","executionInfo":{"status":"ok","timestamp":1746465469610,"user_tz":240,"elapsed":15,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}},"outputId":"30cf1ebf-0a9c-4d0a-d919-4f414ff3a427"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['date', 'open', 'high', 'low', 'close', 'revenue score',\n","       'Profit Margin Score', 'EPS Surprise Score', 'Piotroski_Score_Scaled',\n","       'fundamental_score', 'ticker_x', 'rsi_score', 'macd_score', 'sma_score',\n","       'atr_score', 'technical_score', 'ticker_y', 'article_count',\n","       'negative_sentiment_news', 'neutral_sentiment_news',\n","       'positive_sentiment_news', 'news_sentiment_score', 'ticker'],\n","      dtype='object')"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["social_df = pd.read_csv('/content/drive/My Drive/StockDashboard_Automation/ExportToGitHub/social_sentiment.csv')\n","\n","social_df.rename(columns={\"Date\": \"date\"}, inplace=True)\n","\n","social_df['date'] = pd.to_datetime(social_df['date'])\n","\n","df = main_df.merge(social_df, on='date', how='left')\n","df['Social_Sentiment_Score'] = df['Social_Sentiment_Score'].fillna(0)\n","df['has_social_sentiment'] = (df['Social_Sentiment_Score'] > 0).astype(int)"],"metadata":{"id":"8rQUJtIu-iRQ","executionInfo":{"status":"ok","timestamp":1746465469804,"user_tz":240,"elapsed":195,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":377},"id":"T0rI-Kj3epeG","executionInfo":{"status":"ok","timestamp":1746465469817,"user_tz":240,"elapsed":12,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}},"outputId":"7dbb5813-0e13-4f5e-c79d-286b82606db8"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        date    open    high     low   close  revenue score  \\\n","0 2020-05-19  351.61  363.50  350.51  352.22          22.78   \n","1 2020-08-18  498.00  499.84  483.45  490.43          94.94   \n","2 2020-08-19  491.86  492.60  483.92  485.54          94.94   \n","3 2020-08-20  479.00  495.00  475.15  485.64          94.94   \n","4 2020-09-15  531.20  531.95  513.11  519.64          94.94   \n","\n","   Profit Margin Score  EPS Surprise Score  Piotroski_Score_Scaled  \\\n","0                75.95               85.71                   33.33   \n","1                49.37              100.00                   55.56   \n","2                49.37              100.00                   55.56   \n","3                49.37              100.00                   55.56   \n","4                49.37              100.00                   55.56   \n","\n","   fundamental_score  ... news_sentiment_score  ticker  \\\n","0              52.17  ...                95.38    NVDA   \n","1              56.94  ...                95.26    NVDA   \n","2              56.94  ...                83.06    NVDA   \n","3              56.94  ...                50.00    NVDA   \n","4              56.94  ...                96.69    NVDA   \n","\n","   Negative_Sentiment_Social  Neutral_Sentiment_Social  \\\n","0                        NaN                       NaN   \n","1                        NaN                       NaN   \n","2                        NaN                       NaN   \n","3                        NaN                       NaN   \n","4                        NaN                       NaN   \n","\n","   Positive_Sentiment_Social  Social_Sentiment_Score Post Count  \\\n","0                        NaN                     0.0        NaN   \n","1                        NaN                     0.0        NaN   \n","2                        NaN                     0.0        NaN   \n","3                        NaN                     0.0        NaN   \n","4                        NaN                     0.0        NaN   \n","\n","   Comment Count  Ticker  has_social_sentiment  \n","0            NaN     NaN                     0  \n","1            NaN     NaN                     0  \n","2            NaN     NaN                     0  \n","3            NaN     NaN                     0  \n","4            NaN     NaN                     0  \n","\n","[5 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-4ce0f5e9-6ec9-4736-95b6-fc7d30ecf067\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>revenue score</th>\n","      <th>Profit Margin Score</th>\n","      <th>EPS Surprise Score</th>\n","      <th>Piotroski_Score_Scaled</th>\n","      <th>fundamental_score</th>\n","      <th>...</th>\n","      <th>news_sentiment_score</th>\n","      <th>ticker</th>\n","      <th>Negative_Sentiment_Social</th>\n","      <th>Neutral_Sentiment_Social</th>\n","      <th>Positive_Sentiment_Social</th>\n","      <th>Social_Sentiment_Score</th>\n","      <th>Post Count</th>\n","      <th>Comment Count</th>\n","      <th>Ticker</th>\n","      <th>has_social_sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-05-19</td>\n","      <td>351.61</td>\n","      <td>363.50</td>\n","      <td>350.51</td>\n","      <td>352.22</td>\n","      <td>22.78</td>\n","      <td>75.95</td>\n","      <td>85.71</td>\n","      <td>33.33</td>\n","      <td>52.17</td>\n","      <td>...</td>\n","      <td>95.38</td>\n","      <td>NVDA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-08-18</td>\n","      <td>498.00</td>\n","      <td>499.84</td>\n","      <td>483.45</td>\n","      <td>490.43</td>\n","      <td>94.94</td>\n","      <td>49.37</td>\n","      <td>100.00</td>\n","      <td>55.56</td>\n","      <td>56.94</td>\n","      <td>...</td>\n","      <td>95.26</td>\n","      <td>NVDA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-08-19</td>\n","      <td>491.86</td>\n","      <td>492.60</td>\n","      <td>483.92</td>\n","      <td>485.54</td>\n","      <td>94.94</td>\n","      <td>49.37</td>\n","      <td>100.00</td>\n","      <td>55.56</td>\n","      <td>56.94</td>\n","      <td>...</td>\n","      <td>83.06</td>\n","      <td>NVDA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-08-20</td>\n","      <td>479.00</td>\n","      <td>495.00</td>\n","      <td>475.15</td>\n","      <td>485.64</td>\n","      <td>94.94</td>\n","      <td>49.37</td>\n","      <td>100.00</td>\n","      <td>55.56</td>\n","      <td>56.94</td>\n","      <td>...</td>\n","      <td>50.00</td>\n","      <td>NVDA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-09-15</td>\n","      <td>531.20</td>\n","      <td>531.95</td>\n","      <td>513.11</td>\n","      <td>519.64</td>\n","      <td>94.94</td>\n","      <td>49.37</td>\n","      <td>100.00</td>\n","      <td>55.56</td>\n","      <td>56.94</td>\n","      <td>...</td>\n","      <td>96.69</td>\n","      <td>NVDA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ce0f5e9-6ec9-4736-95b6-fc7d30ecf067')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4ce0f5e9-6ec9-4736-95b6-fc7d30ecf067 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4ce0f5e9-6ec9-4736-95b6-fc7d30ecf067');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-af84cab8-cee5-4a4f-8ae8-5719c5da9362\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-af84cab8-cee5-4a4f-8ae8-5719c5da9362')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-af84cab8-cee5-4a4f-8ae8-5719c5da9362 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9F5BPMX7fQAF","executionInfo":{"status":"ok","timestamp":1746465469853,"user_tz":240,"elapsed":34,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}},"outputId":"0299ec37-7b56-4fe0-ad49-3c8e0828f2a8"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['date', 'open', 'high', 'low', 'close', 'revenue score',\n","       'Profit Margin Score', 'EPS Surprise Score', 'Piotroski_Score_Scaled',\n","       'fundamental_score', 'ticker_x', 'rsi_score', 'macd_score', 'sma_score',\n","       'atr_score', 'technical_score', 'ticker_y', 'article_count',\n","       'negative_sentiment_news', 'neutral_sentiment_news',\n","       'positive_sentiment_news', 'news_sentiment_score', 'ticker',\n","       'Negative_Sentiment_Social', 'Neutral_Sentiment_Social',\n","       'Positive_Sentiment_Social', 'Social_Sentiment_Score', 'Post Count',\n","       'Comment Count', 'Ticker', 'has_social_sentiment'],\n","      dtype='object')"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["def tune_xgb_parameters_asymmetric_fast(\n","    df,\n","    base_pillars,\n","    social_col,\n","    close_col=\"close\",\n","    down_thresholds=[0.05,0.15,0.20],\n","    up_thresholds=[0.07,0.10 ],\n","    lookaheads=[10, 20 ,30],\n","    test_sizes=[0.2],\n","    param_grid=None,\n","    max_param_samples=400,\n","    sample_frac=1.0,\n","    min_class_count=120,\n","    save_path=\"xgb_results_log.csv\",\n","    random_state=42\n","):\n","    if param_grid is None:\n","        param_grid = {\n","             'n_estimators': [50,100,150,200],\n","    'max_depth': [2,3, 4,5],\n","    'learning_rate': [0.05],\n","    'subsample': [0.7, 0.8,0.9],\n","    'colsample_bytree': [0.6, 0.8, 1.0],\n","    'min_child_weight': [3, 5,10],\n","    'gamma': [0, 0.1],\n","    'reg_alpha':\t[0.1, 0.5],\n","'reg_lambda':\t[1.0, 2.0]\n","        }\n","\n","    sampled_params = list(ParameterSampler(param_grid, n_iter=max_param_samples, random_state=random_state))\n","    results = []\n","\n","    def label_asymmetric(x, d_thr, u_thr):\n","        if x < -d_thr:\n","            return 1\n","        elif x > u_thr:\n","            return 2\n","        else:\n","            return 0\n","\n","    for down_threshold in down_thresholds:\n","        for up_threshold in up_thresholds:\n","            for lookahead in lookaheads:\n","                for test_size in test_sizes:\n","                    data = df.copy()\n","                    data[social_col] = data[social_col].fillna(0)\n","                    data[\"Forward_Return\"] = data[close_col].shift(-lookahead) / data[close_col] - 1\n","                    data[\"Target_3Class\"] = data[\"Forward_Return\"].apply(\n","                        lambda x: label_asymmetric(x, down_threshold, up_threshold)\n","                    )\n","\n","                    features = base_pillars\n","                    data_model = data.dropna(subset=features + [\"Target_3Class\"])\n","\n","                    if data_model.empty or data_model[\"Target_3Class\"].nunique() < 2:\n","                        continue\n","\n","                    target_counts = data_model[\"Target_3Class\"].value_counts()\n","                    if target_counts.min() < min_class_count or target_counts.nunique() < 3:\n","                        continue\n","\n","                    if sample_frac < 1.0:\n","                        data_model = data_model.sample(frac=sample_frac, random_state=random_state)\n","\n","                    X = data_model[features]\n","                    y = data_model[\"Target_3Class\"]\n","\n","                    X_train, X_test, y_train, y_test = train_test_split(\n","                        X, y, test_size=test_size, random_state=random_state, stratify=y\n","                    )\n","\n","                    train_counts = y_train.value_counts()\n","                    test_counts = y_test.value_counts()\n","\n","                    for params in sampled_params:\n","                        model = xgb.XGBClassifier(\n","                            objective='multi:softmax',\n","                            num_class=3,\n","                            n_jobs=-1,\n","                            random_state=random_state,\n","                            eval_metric=[\"merror\", \"mlogloss\"],\n","                            **params\n","                        )\n","\n","                        # model.fit(X_train, y_train,\n","                        #           eval_set=[(X_test, y_test)],\n","                        #           early_stopping_rounds=10,)\n","                        eval_set = [(X_test, y_test)]\n","                        model.fit(X_train, y_train, eval_set=eval_set,  verbose=False)\n","\n","                        y_train_pred = model.predict(X_train)\n","                        y_test_pred = model.predict(X_test)\n","\n","                        train_f1 = f1_score(y_train, y_train_pred, average='macro', zero_division=0)\n","                        test_f1 = f1_score(y_test, y_test_pred, average='macro', zero_division=0)\n","                        f1_gap = train_f1 - test_f1\n","\n","                        labels = [1, 0, 2]\n","                        train_f1_pc = f1_score(y_train, y_train_pred, average=None, labels=labels, zero_division=0)\n","                        test_f1_pc = f1_score(y_test, y_test_pred, average=None, labels=labels, zero_division=0)\n","                        f1_gap_pc = train_f1_pc - test_f1_pc\n","\n","                        train_prec_pc = precision_score(y_train, y_train_pred, average=None, labels=labels, zero_division=0)\n","                        test_prec_pc = precision_score(y_test, y_test_pred, average=None, labels=labels, zero_division=0)\n","                        prec_gap_pc = train_prec_pc - test_prec_pc\n","\n","                        train_recall_pc = recall_score(y_train, y_train_pred, average=None, labels=labels, zero_division=0)\n","                        test_recall_pc = recall_score(y_test, y_test_pred, average=None, labels=labels, zero_division=0)\n","                        recall_gap_pc = train_recall_pc - test_recall_pc\n","                        feature_weights = model.feature_importances_\n","                        normalized_weights = feature_weights / feature_weights.sum()\n","                        feature_weight_dict = {feat: round(wt, 6) for feat, wt in zip(features, normalized_weights)}\n","\n","                        result = {\n","                            \"Model\": \"xgb\",\n","                            \"Down_Threshold\": down_threshold,\n","                            \"Up_Threshold\": up_threshold,\n","                            \"Lookahead\": lookahead,\n","                            \"Test_Size\": test_size,\n","                            \"Train_F1\": train_f1,\n","                            \"Test_F1\": test_f1,\n","                            \"F1_Gap\": f1_gap,\n","                            \"Accuracy_Test\": accuracy_score(y_test, y_test_pred),\n","                            \"Precision_Test\": precision_score(y_test, y_test_pred, average='macro', zero_division=0),\n","                            \"Recall_Test\": recall_score(y_test, y_test_pred, average='macro', zero_division=0),\n","                            \"Train_F1_-1\": train_f1_pc[0],\n","                            \"Test_F1_-1\": test_f1_pc[0],\n","                            \"F1_Gap_-1\": f1_gap_pc[0],\n","                            \"Train_Precision_-1\": train_prec_pc[0],\n","                            \"Test_Precision_-1\": test_prec_pc[0],\n","                            \"Precision_Gap_-1\": prec_gap_pc[0],\n","                            \"Train_Recall_-1\": train_recall_pc[0],\n","                            \"Test_Recall_-1\": test_recall_pc[0],\n","                            \"Recall_Gap_-1\": recall_gap_pc[0],\n","                            \"Train_F1_0\": train_f1_pc[1],\n","                            \"Test_F1_0\": test_f1_pc[1],\n","                            \"F1_Gap_0\": f1_gap_pc[1],\n","                            \"Train_Precision_0\": train_prec_pc[1],\n","                            \"Test_Precision_0\": test_prec_pc[1],\n","                            \"Precision_Gap_0\": prec_gap_pc[1],\n","                            \"Train_Recall_0\": train_recall_pc[1],\n","                            \"Test_Recall_0\": test_recall_pc[1],\n","                            \"Recall_Gap_0\": recall_gap_pc[1],\n","                            \"Train_F1_1\": train_f1_pc[2],\n","                            \"Test_F1_1\": test_f1_pc[2],\n","                            \"F1_Gap_1\": f1_gap_pc[2],\n","                            \"Train_Precision_1\": train_prec_pc[2],\n","                            \"Test_Precision_1\": test_prec_pc[2],\n","                            \"Precision_Gap_1\": prec_gap_pc[2],\n","                            \"Train_Recall_1\": train_recall_pc[2],\n","                            \"Test_Recall_1\": test_recall_pc[2],\n","                            \"Recall_Gap_1\": recall_gap_pc[2],\n","                            \"Train_Count_-1\": train_counts.get(1, 0),\n","                            \"Train_Count_0\": train_counts.get(0, 0),\n","                            \"Train_Count_1\": train_counts.get(2, 0),\n","                            \"Test_Count_-1\": test_counts.get(1, 0),\n","                            \"Test_Count_0\": test_counts.get(0, 0),\n","                            \"Test_Count_1\": test_counts.get(2, 0),\n","                            \"Feature_Weights\": feature_weight_dict,\n","                            **params\n","                        }\n","\n","                        results.append(result)\n","                        pd.DataFrame([result]).to_csv(\n","                            save_path, mode='a', index=False, header=not os.path.exists(save_path)\n","                        )\n","\n","    return pd.DataFrame(results)\n"],"metadata":{"id":"OGLtvUl7iJ5X","executionInfo":{"status":"ok","timestamp":1746465469861,"user_tz":240,"elapsed":8,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["xgb_param_grid = {\n","    'n_estimators': [50,100,150],\n","    'max_depth': [2,3, 4],\n","    'learning_rate': [0.01,0.05],\n","    'subsample': [0.7, 0.8,0.9],\n","    'colsample_bytree': [0.6, 0.8, 1.0],\n","    'min_child_weight': [3, 5,10],\n","    #'gamma': [0, 0.1]\n","    'reg_alpha':\t[0.1, 0.5],\n","'reg_lambda':\t[1.0, 2.0]\n","}\n","\n","results = tune_xgb_parameters_asymmetric_fast(\n","    df=df,\n","    base_pillars=[\"fundamental_score\", \"technical_score\", \"news_sentiment_score\"],\n","    social_col=\"Social_Sentiment_Score\",\n","    param_grid=xgb_param_grid,\n",")\n","\n","results.sort_values(by=\"Test_F1\", ascending=False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"id":"bSGQBLE2iPCT","outputId":"8f379058-3663-4d81-ec23-da3f1e548243","executionInfo":{"status":"ok","timestamp":1746466271420,"user_tz":240,"elapsed":801557,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Model  Down_Threshold  Up_Threshold  Lookahead  Test_Size  Train_F1  \\\n","2883   xgb            0.15          0.07         30        0.2  0.765730   \n","3045   xgb            0.15          0.07         30        0.2  0.743025   \n","2945   xgb            0.15          0.07         30        0.2  0.769444   \n","2955   xgb            0.15          0.07         30        0.2  0.788024   \n","3195   xgb            0.15          0.07         30        0.2  0.737656   \n","\n","       Test_F1    F1_Gap  Accuracy_Test  Precision_Test  ...  Test_Count_1  \\\n","2883  0.765374  0.000356       0.796117        0.783368  ...            89   \n","3045  0.759763 -0.016737       0.786408        0.771333  ...            89   \n","2945  0.758181  0.011263       0.791262        0.783377  ...            89   \n","2955  0.755140  0.032883       0.786408        0.758743  ...            89   \n","3195  0.753627 -0.015970       0.781553        0.753786  ...            89   \n","\n","                                        Feature_Weights  subsample  \\\n","2883  {'fundamental_score': 0.465314, 'technical_sco...        0.7   \n","3045  {'fundamental_score': 0.462292, 'technical_sco...        0.9   \n","2945  {'fundamental_score': 0.478162, 'technical_sco...        0.8   \n","2955  {'fundamental_score': 0.465377, 'technical_sco...        0.7   \n","3195  {'fundamental_score': 0.450544, 'technical_sco...        0.7   \n","\n","      reg_lambda  reg_alpha  n_estimators  min_child_weight  max_depth  \\\n","2883         1.0        0.1           100                 5          4   \n","3045         1.0        0.1           100                10          4   \n","2945         2.0        0.1           100                 3          4   \n","2955         2.0        0.1           150                 5          4   \n","3195         1.0        0.1           100                10          4   \n","\n","      learning_rate  colsample_bytree  \n","2883           0.05               0.8  \n","3045           0.05               1.0  \n","2945           0.05               0.8  \n","2955           0.05               0.8  \n","3195           0.05               1.0  \n","\n","[5 rows x 53 columns]"],"text/html":["\n","  <div id=\"df-8687ae9e-0b9a-42c2-9ab1-ef6c41d0500c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Down_Threshold</th>\n","      <th>Up_Threshold</th>\n","      <th>Lookahead</th>\n","      <th>Test_Size</th>\n","      <th>Train_F1</th>\n","      <th>Test_F1</th>\n","      <th>F1_Gap</th>\n","      <th>Accuracy_Test</th>\n","      <th>Precision_Test</th>\n","      <th>...</th>\n","      <th>Test_Count_1</th>\n","      <th>Feature_Weights</th>\n","      <th>subsample</th>\n","      <th>reg_lambda</th>\n","      <th>reg_alpha</th>\n","      <th>n_estimators</th>\n","      <th>min_child_weight</th>\n","      <th>max_depth</th>\n","      <th>learning_rate</th>\n","      <th>colsample_bytree</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2883</th>\n","      <td>xgb</td>\n","      <td>0.15</td>\n","      <td>0.07</td>\n","      <td>30</td>\n","      <td>0.2</td>\n","      <td>0.765730</td>\n","      <td>0.765374</td>\n","      <td>0.000356</td>\n","      <td>0.796117</td>\n","      <td>0.783368</td>\n","      <td>...</td>\n","      <td>89</td>\n","      <td>{'fundamental_score': 0.465314, 'technical_sco...</td>\n","      <td>0.7</td>\n","      <td>1.0</td>\n","      <td>0.1</td>\n","      <td>100</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>0.05</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>3045</th>\n","      <td>xgb</td>\n","      <td>0.15</td>\n","      <td>0.07</td>\n","      <td>30</td>\n","      <td>0.2</td>\n","      <td>0.743025</td>\n","      <td>0.759763</td>\n","      <td>-0.016737</td>\n","      <td>0.786408</td>\n","      <td>0.771333</td>\n","      <td>...</td>\n","      <td>89</td>\n","      <td>{'fundamental_score': 0.462292, 'technical_sco...</td>\n","      <td>0.9</td>\n","      <td>1.0</td>\n","      <td>0.1</td>\n","      <td>100</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>0.05</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2945</th>\n","      <td>xgb</td>\n","      <td>0.15</td>\n","      <td>0.07</td>\n","      <td>30</td>\n","      <td>0.2</td>\n","      <td>0.769444</td>\n","      <td>0.758181</td>\n","      <td>0.011263</td>\n","      <td>0.791262</td>\n","      <td>0.783377</td>\n","      <td>...</td>\n","      <td>89</td>\n","      <td>{'fundamental_score': 0.478162, 'technical_sco...</td>\n","      <td>0.8</td>\n","      <td>2.0</td>\n","      <td>0.1</td>\n","      <td>100</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.05</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>2955</th>\n","      <td>xgb</td>\n","      <td>0.15</td>\n","      <td>0.07</td>\n","      <td>30</td>\n","      <td>0.2</td>\n","      <td>0.788024</td>\n","      <td>0.755140</td>\n","      <td>0.032883</td>\n","      <td>0.786408</td>\n","      <td>0.758743</td>\n","      <td>...</td>\n","      <td>89</td>\n","      <td>{'fundamental_score': 0.465377, 'technical_sco...</td>\n","      <td>0.7</td>\n","      <td>2.0</td>\n","      <td>0.1</td>\n","      <td>150</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>0.05</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>3195</th>\n","      <td>xgb</td>\n","      <td>0.15</td>\n","      <td>0.07</td>\n","      <td>30</td>\n","      <td>0.2</td>\n","      <td>0.737656</td>\n","      <td>0.753627</td>\n","      <td>-0.015970</td>\n","      <td>0.781553</td>\n","      <td>0.753786</td>\n","      <td>...</td>\n","      <td>89</td>\n","      <td>{'fundamental_score': 0.450544, 'technical_sco...</td>\n","      <td>0.7</td>\n","      <td>1.0</td>\n","      <td>0.1</td>\n","      <td>100</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>0.05</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 53 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8687ae9e-0b9a-42c2-9ab1-ef6c41d0500c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8687ae9e-0b9a-42c2-9ab1-ef6c41d0500c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8687ae9e-0b9a-42c2-9ab1-ef6c41d0500c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-0aa14bc6-1e7d-4a3c-b30e-d0c57e67b93a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0aa14bc6-1e7d-4a3c-b30e-d0c57e67b93a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-0aa14bc6-1e7d-4a3c-b30e-d0c57e67b93a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["def tag_fit_quality(row, min_f1=0.55, max_gap=0.10):\n","    if row[\"Test_F1\"] < min_f1 and row[\"Train_F1\"] < min_f1:\n","        return \"Underfitting\"\n","    elif row[\"F1_Gap\"] > max_gap:\n","        return \"Overfitting\"\n","    elif row[\"Test_F1\"] >= min_f1 and row[\"F1_Gap\"] <= max_gap:\n","        return \"Good Fit\"\n","    else:\n","        return \"Uncertain\"\n","results[\"Fit_Quality\"] = results.apply(tag_fit_quality, axis=1)"],"metadata":{"id":"nvFyGBkwd8ko","executionInfo":{"status":"ok","timestamp":1746466271450,"user_tz":240,"elapsed":34,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["results.csv_path = f\"/content/drive/My Drive/StockDashboard_Automation/ExportToGitHub/xgb_results.csv\"\n","results.to_csv(results.csv_path, index=False)"],"metadata":{"id":"QNCbMSDh46cW","executionInfo":{"status":"ok","timestamp":1746466272438,"user_tz":240,"elapsed":987,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["perfect_fits = results[\n","    (results[\"Test_F1\"] >= 0.6) &\n","    (results[\"F1_Gap\"] <= 0.05) &\n","    (results[\"Accuracy_Test\"] >= 0.6)\n","].sort_values(by=\"Test_F1\", ascending=False)"],"metadata":{"id":"VcYbbrx2fi90","executionInfo":{"status":"ok","timestamp":1746466272439,"user_tz":240,"elapsed":3,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["perfect_fits.iloc[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"7qN9AWrMYrUK","outputId":"d35fec77-1886-4709-d96a-f64377e67110","executionInfo":{"status":"ok","timestamp":1746466272450,"user_tz":240,"elapsed":13,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Model                                                               xgb\n","Down_Threshold                                                     0.15\n","Up_Threshold                                                       0.07\n","Lookahead                                                            30\n","Test_Size                                                           0.2\n","Train_F1                                                        0.76573\n","Test_F1                                                        0.765374\n","F1_Gap                                                         0.000356\n","Accuracy_Test                                                  0.796117\n","Precision_Test                                                 0.783368\n","Recall_Test                                                    0.754086\n","Train_F1_-1                                                    0.666667\n","Test_F1_-1                                                     0.655738\n","F1_Gap_-1                                                      0.010929\n","Train_Precision_-1                                             0.869048\n","Test_Precision_-1                                              0.740741\n","Precision_Gap_-1                                               0.128307\n","Train_Recall_-1                                                0.540741\n","Test_Recall_-1                                                 0.588235\n","Recall_Gap_-1                                                 -0.047495\n","Train_F1_0                                                     0.778281\n","Test_F1_0                                                      0.797688\n","F1_Gap_0                                                      -0.019407\n","Train_Precision_0                                              0.774775\n","Test_Precision_0                                               0.766667\n","Precision_Gap_0                                                0.008108\n","Train_Recall_0                                                 0.781818\n","Test_Recall_0                                                  0.831325\n","Recall_Gap_0                                                  -0.049507\n","Train_F1_1                                                     0.852243\n","Test_F1_1                                                      0.842697\n","F1_Gap_1                                                       0.009546\n","Train_Precision_1                                              0.801489\n","Test_Precision_1                                               0.842697\n","Precision_Gap_1                                               -0.041208\n","Train_Recall_1                                                 0.909859\n","Test_Recall_1                                                  0.842697\n","Recall_Gap_1                                                   0.067163\n","Train_Count_-1                                                      135\n","Train_Count_0                                                       330\n","Train_Count_1                                                       355\n","Test_Count_-1                                                        34\n","Test_Count_0                                                         83\n","Test_Count_1                                                         89\n","Feature_Weights       {'fundamental_score': 0.465314, 'technical_sco...\n","subsample                                                           0.7\n","reg_lambda                                                          1.0\n","reg_alpha                                                           0.1\n","n_estimators                                                        100\n","min_child_weight                                                      5\n","max_depth                                                             4\n","learning_rate                                                      0.05\n","colsample_bytree                                                    0.8\n","Fit_Quality                                                    Good Fit\n","Name: 2883, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2883</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Model</th>\n","      <td>xgb</td>\n","    </tr>\n","    <tr>\n","      <th>Down_Threshold</th>\n","      <td>0.15</td>\n","    </tr>\n","    <tr>\n","      <th>Up_Threshold</th>\n","      <td>0.07</td>\n","    </tr>\n","    <tr>\n","      <th>Lookahead</th>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>Test_Size</th>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>Train_F1</th>\n","      <td>0.76573</td>\n","    </tr>\n","    <tr>\n","      <th>Test_F1</th>\n","      <td>0.765374</td>\n","    </tr>\n","    <tr>\n","      <th>F1_Gap</th>\n","      <td>0.000356</td>\n","    </tr>\n","    <tr>\n","      <th>Accuracy_Test</th>\n","      <td>0.796117</td>\n","    </tr>\n","    <tr>\n","      <th>Precision_Test</th>\n","      <td>0.783368</td>\n","    </tr>\n","    <tr>\n","      <th>Recall_Test</th>\n","      <td>0.754086</td>\n","    </tr>\n","    <tr>\n","      <th>Train_F1_-1</th>\n","      <td>0.666667</td>\n","    </tr>\n","    <tr>\n","      <th>Test_F1_-1</th>\n","      <td>0.655738</td>\n","    </tr>\n","    <tr>\n","      <th>F1_Gap_-1</th>\n","      <td>0.010929</td>\n","    </tr>\n","    <tr>\n","      <th>Train_Precision_-1</th>\n","      <td>0.869048</td>\n","    </tr>\n","    <tr>\n","      <th>Test_Precision_-1</th>\n","      <td>0.740741</td>\n","    </tr>\n","    <tr>\n","      <th>Precision_Gap_-1</th>\n","      <td>0.128307</td>\n","    </tr>\n","    <tr>\n","      <th>Train_Recall_-1</th>\n","      <td>0.540741</td>\n","    </tr>\n","    <tr>\n","      <th>Test_Recall_-1</th>\n","      <td>0.588235</td>\n","    </tr>\n","    <tr>\n","      <th>Recall_Gap_-1</th>\n","      <td>-0.047495</td>\n","    </tr>\n","    <tr>\n","      <th>Train_F1_0</th>\n","      <td>0.778281</td>\n","    </tr>\n","    <tr>\n","      <th>Test_F1_0</th>\n","      <td>0.797688</td>\n","    </tr>\n","    <tr>\n","      <th>F1_Gap_0</th>\n","      <td>-0.019407</td>\n","    </tr>\n","    <tr>\n","      <th>Train_Precision_0</th>\n","      <td>0.774775</td>\n","    </tr>\n","    <tr>\n","      <th>Test_Precision_0</th>\n","      <td>0.766667</td>\n","    </tr>\n","    <tr>\n","      <th>Precision_Gap_0</th>\n","      <td>0.008108</td>\n","    </tr>\n","    <tr>\n","      <th>Train_Recall_0</th>\n","      <td>0.781818</td>\n","    </tr>\n","    <tr>\n","      <th>Test_Recall_0</th>\n","      <td>0.831325</td>\n","    </tr>\n","    <tr>\n","      <th>Recall_Gap_0</th>\n","      <td>-0.049507</td>\n","    </tr>\n","    <tr>\n","      <th>Train_F1_1</th>\n","      <td>0.852243</td>\n","    </tr>\n","    <tr>\n","      <th>Test_F1_1</th>\n","      <td>0.842697</td>\n","    </tr>\n","    <tr>\n","      <th>F1_Gap_1</th>\n","      <td>0.009546</td>\n","    </tr>\n","    <tr>\n","      <th>Train_Precision_1</th>\n","      <td>0.801489</td>\n","    </tr>\n","    <tr>\n","      <th>Test_Precision_1</th>\n","      <td>0.842697</td>\n","    </tr>\n","    <tr>\n","      <th>Precision_Gap_1</th>\n","      <td>-0.041208</td>\n","    </tr>\n","    <tr>\n","      <th>Train_Recall_1</th>\n","      <td>0.909859</td>\n","    </tr>\n","    <tr>\n","      <th>Test_Recall_1</th>\n","      <td>0.842697</td>\n","    </tr>\n","    <tr>\n","      <th>Recall_Gap_1</th>\n","      <td>0.067163</td>\n","    </tr>\n","    <tr>\n","      <th>Train_Count_-1</th>\n","      <td>135</td>\n","    </tr>\n","    <tr>\n","      <th>Train_Count_0</th>\n","      <td>330</td>\n","    </tr>\n","    <tr>\n","      <th>Train_Count_1</th>\n","      <td>355</td>\n","    </tr>\n","    <tr>\n","      <th>Test_Count_-1</th>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>Test_Count_0</th>\n","      <td>83</td>\n","    </tr>\n","    <tr>\n","      <th>Test_Count_1</th>\n","      <td>89</td>\n","    </tr>\n","    <tr>\n","      <th>Feature_Weights</th>\n","      <td>{'fundamental_score': 0.465314, 'technical_sco...</td>\n","    </tr>\n","    <tr>\n","      <th>subsample</th>\n","      <td>0.7</td>\n","    </tr>\n","    <tr>\n","      <th>reg_lambda</th>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>reg_alpha</th>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>n_estimators</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>min_child_weight</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>max_depth</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>learning_rate</th>\n","      <td>0.05</td>\n","    </tr>\n","    <tr>\n","      <th>colsample_bytree</th>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>Fit_Quality</th>\n","      <td>Good Fit</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["perfect_fits.csv_path = f\"/content/drive/My Drive/StockDashboard_Automation/ExportToGitHub/perfect_fits.csv\"\n","perfect_fits.to_csv(perfect_fits.csv_path, index=False)"],"metadata":{"id":"oEzQlpsb4v0G","executionInfo":{"status":"ok","timestamp":1746466272741,"user_tz":240,"elapsed":291,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["final_weights = perfect_fits['Feature_Weights'].iloc[0]"],"metadata":{"id":"dVY1HSPV61a8","executionInfo":{"status":"ok","timestamp":1746466272748,"user_tz":240,"elapsed":4,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["for key, value in final_weights.items():\n","    print(f\"{key}: {value}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-J7jQhYmlbNS","executionInfo":{"status":"ok","timestamp":1746466272762,"user_tz":240,"elapsed":13,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}},"outputId":"0e41a5bb-2ca1-4dda-f4e9-62d8721f64ab"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["fundamental_score: 0.46531400084495544\n","technical_score: 0.39459100365638733\n","news_sentiment_score: 0.14009499549865723\n"]}]},{"cell_type":"code","source":["features = [\"fundamental_score\", \"technical_score\", \"news_sentiment_score\"]\n","X = df[features]\n","final_weights_list = [final_weights[feature] for feature in features]\n","df['composite_score'] = np.dot(X,final_weights_list)"],"metadata":{"id":"BvM3lp7I612H","executionInfo":{"status":"ok","timestamp":1746466272778,"user_tz":240,"elapsed":15,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":652},"id":"M0gVBMzV7Kd0","outputId":"391249f2-3cbf-4a21-9d62-bacb46ab65cf","executionInfo":{"status":"ok","timestamp":1746466272823,"user_tz":240,"elapsed":43,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           date    open    high     low   close  revenue score  \\\n","0    2020-05-19  351.61  363.50  350.51  352.22          22.78   \n","1    2020-08-18  498.00  499.84  483.45  490.43          94.94   \n","2    2020-08-19  491.86  492.60  483.92  485.54          94.94   \n","3    2020-08-20  479.00  495.00  475.15  485.64          94.94   \n","4    2020-09-15  531.20  531.95  513.11  519.64          94.94   \n","...         ...     ...     ...     ...     ...            ...   \n","1021 2025-04-28  109.69  110.37  106.02  108.73          69.62   \n","1022 2025-04-29  107.67  110.20  107.44  109.02          69.62   \n","1023 2025-04-30  104.47  108.92  104.08  108.92          69.62   \n","1024 2025-05-01  113.08  114.94  111.30  111.61          69.62   \n","1025 2025-05-02  114.18  115.40  113.37  114.50          69.62   \n","\n","      Profit Margin Score  EPS Surprise Score  Piotroski_Score_Scaled  \\\n","0                   75.95               85.71                   33.33   \n","1                   49.37              100.00                   55.56   \n","2                   49.37              100.00                   55.56   \n","3                   49.37              100.00                   55.56   \n","4                   49.37              100.00                   55.56   \n","...                   ...                 ...                     ...   \n","1021                98.73               76.07                   66.67   \n","1022                98.73               76.07                   66.67   \n","1023                98.73               76.07                   66.67   \n","1024                98.73               76.07                   66.67   \n","1025                98.73               76.07                   66.67   \n","\n","      fundamental_score  ... ticker  Negative_Sentiment_Social  \\\n","0                 52.17  ...   NVDA                        NaN   \n","1                 56.94  ...   NVDA                        NaN   \n","2                 56.94  ...   NVDA                        NaN   \n","3                 56.94  ...   NVDA                        NaN   \n","4                 56.94  ...   NVDA                        NaN   \n","...                 ...  ...    ...                        ...   \n","1021              88.05  ...   NVDA                   0.121069   \n","1022              88.05  ...   NVDA                   0.000000   \n","1023              88.05  ...   NVDA                   0.157087   \n","1024              88.05  ...   NVDA                   0.049870   \n","1025              88.05  ...   NVDA                   0.024662   \n","\n","      Neutral_Sentiment_Social  Positive_Sentiment_Social  \\\n","0                          NaN                        NaN   \n","1                          NaN                        NaN   \n","2                          NaN                        NaN   \n","3                          NaN                        NaN   \n","4                          NaN                        NaN   \n","...                        ...                        ...   \n","1021                  0.634792                   0.062400   \n","1022                  0.897500                   0.000000   \n","1023                  0.636549                   0.021738   \n","1024                  0.707134                   0.089260   \n","1025                  0.711914                   0.073276   \n","\n","      Social_Sentiment_Score  Post Count Comment Count  Ticker  \\\n","0                   0.000000         NaN           NaN     NaN   \n","1                   0.000000         NaN           NaN     NaN   \n","2                   0.000000         NaN           NaN     NaN   \n","3                   0.000000         NaN           NaN     NaN   \n","4                   0.000000         NaN           NaN     NaN   \n","...                      ...         ...           ...     ...   \n","1021               47.066538         3.0          23.0    NVDA   \n","1022               50.000000           -           1.0    NVDA   \n","1023               43.232564         6.0          33.0    NVDA   \n","1024               51.969468         5.0          42.0    NVDA   \n","1025               52.430714         2.0          19.0    NVDA   \n","\n","      has_social_sentiment  composite_score  \n","0                        0        53.306901  \n","1                        0        60.169757  \n","2                        0        58.176493  \n","3                        0        53.351602  \n","4                        0        57.501416  \n","...                    ...              ...  \n","1021                     1        56.001245  \n","1022                     1        60.674557  \n","1023                     1        57.865163  \n","1024                     1        61.040762  \n","1025                     1        60.561398  \n","\n","[1026 rows x 32 columns]"],"text/html":["\n","  <div id=\"df-0c81923c-9260-48b8-bda7-d3b014b4f315\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>revenue score</th>\n","      <th>Profit Margin Score</th>\n","      <th>EPS Surprise Score</th>\n","      <th>Piotroski_Score_Scaled</th>\n","      <th>fundamental_score</th>\n","      <th>...</th>\n","      <th>ticker</th>\n","      <th>Negative_Sentiment_Social</th>\n","      <th>Neutral_Sentiment_Social</th>\n","      <th>Positive_Sentiment_Social</th>\n","      <th>Social_Sentiment_Score</th>\n","      <th>Post Count</th>\n","      <th>Comment Count</th>\n","      <th>Ticker</th>\n","      <th>has_social_sentiment</th>\n","      <th>composite_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-05-19</td>\n","      <td>351.61</td>\n","      <td>363.50</td>\n","      <td>350.51</td>\n","      <td>352.22</td>\n","      <td>22.78</td>\n","      <td>75.95</td>\n","      <td>85.71</td>\n","      <td>33.33</td>\n","      <td>52.17</td>\n","      <td>...</td>\n","      <td>NVDA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>53.306901</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-08-18</td>\n","      <td>498.00</td>\n","      <td>499.84</td>\n","      <td>483.45</td>\n","      <td>490.43</td>\n","      <td>94.94</td>\n","      <td>49.37</td>\n","      <td>100.00</td>\n","      <td>55.56</td>\n","      <td>56.94</td>\n","      <td>...</td>\n","      <td>NVDA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>60.169757</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-08-19</td>\n","      <td>491.86</td>\n","      <td>492.60</td>\n","      <td>483.92</td>\n","      <td>485.54</td>\n","      <td>94.94</td>\n","      <td>49.37</td>\n","      <td>100.00</td>\n","      <td>55.56</td>\n","      <td>56.94</td>\n","      <td>...</td>\n","      <td>NVDA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>58.176493</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-08-20</td>\n","      <td>479.00</td>\n","      <td>495.00</td>\n","      <td>475.15</td>\n","      <td>485.64</td>\n","      <td>94.94</td>\n","      <td>49.37</td>\n","      <td>100.00</td>\n","      <td>55.56</td>\n","      <td>56.94</td>\n","      <td>...</td>\n","      <td>NVDA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>53.351602</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-09-15</td>\n","      <td>531.20</td>\n","      <td>531.95</td>\n","      <td>513.11</td>\n","      <td>519.64</td>\n","      <td>94.94</td>\n","      <td>49.37</td>\n","      <td>100.00</td>\n","      <td>55.56</td>\n","      <td>56.94</td>\n","      <td>...</td>\n","      <td>NVDA</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>57.501416</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1021</th>\n","      <td>2025-04-28</td>\n","      <td>109.69</td>\n","      <td>110.37</td>\n","      <td>106.02</td>\n","      <td>108.73</td>\n","      <td>69.62</td>\n","      <td>98.73</td>\n","      <td>76.07</td>\n","      <td>66.67</td>\n","      <td>88.05</td>\n","      <td>...</td>\n","      <td>NVDA</td>\n","      <td>0.121069</td>\n","      <td>0.634792</td>\n","      <td>0.062400</td>\n","      <td>47.066538</td>\n","      <td>3.0</td>\n","      <td>23.0</td>\n","      <td>NVDA</td>\n","      <td>1</td>\n","      <td>56.001245</td>\n","    </tr>\n","    <tr>\n","      <th>1022</th>\n","      <td>2025-04-29</td>\n","      <td>107.67</td>\n","      <td>110.20</td>\n","      <td>107.44</td>\n","      <td>109.02</td>\n","      <td>69.62</td>\n","      <td>98.73</td>\n","      <td>76.07</td>\n","      <td>66.67</td>\n","      <td>88.05</td>\n","      <td>...</td>\n","      <td>NVDA</td>\n","      <td>0.000000</td>\n","      <td>0.897500</td>\n","      <td>0.000000</td>\n","      <td>50.000000</td>\n","      <td>-</td>\n","      <td>1.0</td>\n","      <td>NVDA</td>\n","      <td>1</td>\n","      <td>60.674557</td>\n","    </tr>\n","    <tr>\n","      <th>1023</th>\n","      <td>2025-04-30</td>\n","      <td>104.47</td>\n","      <td>108.92</td>\n","      <td>104.08</td>\n","      <td>108.92</td>\n","      <td>69.62</td>\n","      <td>98.73</td>\n","      <td>76.07</td>\n","      <td>66.67</td>\n","      <td>88.05</td>\n","      <td>...</td>\n","      <td>NVDA</td>\n","      <td>0.157087</td>\n","      <td>0.636549</td>\n","      <td>0.021738</td>\n","      <td>43.232564</td>\n","      <td>6.0</td>\n","      <td>33.0</td>\n","      <td>NVDA</td>\n","      <td>1</td>\n","      <td>57.865163</td>\n","    </tr>\n","    <tr>\n","      <th>1024</th>\n","      <td>2025-05-01</td>\n","      <td>113.08</td>\n","      <td>114.94</td>\n","      <td>111.30</td>\n","      <td>111.61</td>\n","      <td>69.62</td>\n","      <td>98.73</td>\n","      <td>76.07</td>\n","      <td>66.67</td>\n","      <td>88.05</td>\n","      <td>...</td>\n","      <td>NVDA</td>\n","      <td>0.049870</td>\n","      <td>0.707134</td>\n","      <td>0.089260</td>\n","      <td>51.969468</td>\n","      <td>5.0</td>\n","      <td>42.0</td>\n","      <td>NVDA</td>\n","      <td>1</td>\n","      <td>61.040762</td>\n","    </tr>\n","    <tr>\n","      <th>1025</th>\n","      <td>2025-05-02</td>\n","      <td>114.18</td>\n","      <td>115.40</td>\n","      <td>113.37</td>\n","      <td>114.50</td>\n","      <td>69.62</td>\n","      <td>98.73</td>\n","      <td>76.07</td>\n","      <td>66.67</td>\n","      <td>88.05</td>\n","      <td>...</td>\n","      <td>NVDA</td>\n","      <td>0.024662</td>\n","      <td>0.711914</td>\n","      <td>0.073276</td>\n","      <td>52.430714</td>\n","      <td>2.0</td>\n","      <td>19.0</td>\n","      <td>NVDA</td>\n","      <td>1</td>\n","      <td>60.561398</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1026 rows × 32 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c81923c-9260-48b8-bda7-d3b014b4f315')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c81923c-9260-48b8-bda7-d3b014b4f315 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c81923c-9260-48b8-bda7-d3b014b4f315');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2f8859cc-6aec-4b25-a0ef-871130608b83\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2f8859cc-6aec-4b25-a0ef-871130608b83')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2f8859cc-6aec-4b25-a0ef-871130608b83 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_ee7be8b9-ebed-40c4-be66-ebdc51cdb468\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ee7be8b9-ebed-40c4-be66-ebdc51cdb468 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uL1V4tc0-_Bn","outputId":"e7067a70-cadc-4f55-ff94-ecbf95d12294","executionInfo":{"status":"ok","timestamp":1746466272836,"user_tz":240,"elapsed":17,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['date', 'open', 'high', 'low', 'close', 'revenue score',\n","       'Profit Margin Score', 'EPS Surprise Score', 'Piotroski_Score_Scaled',\n","       'fundamental_score', 'ticker_x', 'rsi_score', 'macd_score', 'sma_score',\n","       'atr_score', 'technical_score', 'ticker_y', 'article_count',\n","       'negative_sentiment_news', 'neutral_sentiment_news',\n","       'positive_sentiment_news', 'news_sentiment_score', 'ticker',\n","       'Negative_Sentiment_Social', 'Neutral_Sentiment_Social',\n","       'Positive_Sentiment_Social', 'Social_Sentiment_Score', 'Post Count',\n","       'Comment Count', 'Ticker', 'has_social_sentiment', 'composite_score'],\n","      dtype='object')"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df[\"percent_change\"] = df['close'] / df['open'] - 1"],"metadata":{"id":"9zd23dBL_QtR","executionInfo":{"status":"ok","timestamp":1746466272837,"user_tz":240,"elapsed":4,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["comp_output = df[['date' ,'ticker' ,'open'  ,'close' , 'percent_change' ,'fundamental_score', 'technical_score' ,'news_sentiment_score' ,'composite_score' ]]"],"metadata":{"id":"pPX2bnl3-VUz","executionInfo":{"status":"ok","timestamp":1746466272877,"user_tz":240,"elapsed":42,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["def recommend(x):\n","    if x >= 70:\n","        return \"Buy\"\n","    elif x >= 40:\n","        return \"Hold\"\n","    #elif x < 20:\n","        #return \"Sell\"\n","    else:\n","        return \"Sell\"\n","\n","comp_output[\"recommendation\"] = comp_output[\"composite_score\"].apply(recommend)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DmRWsNQt__4t","outputId":"9c891d6f-4314-4517-90f2-6f5b7b09086d","executionInfo":{"status":"ok","timestamp":1746466272879,"user_tz":240,"elapsed":43,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":22,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-22-eef7534a8105>:11: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  comp_output[\"recommendation\"] = comp_output[\"composite_score\"].apply(recommend)\n"]}]},{"cell_type":"code","source":["comp_output"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":597},"id":"DzRpWQtw_2Km","outputId":"1b8bf579-0d62-40b5-ce3a-e2049852cff0","executionInfo":{"status":"ok","timestamp":1746466272888,"user_tz":240,"elapsed":9,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}}},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           date ticker    open   close  percent_change  fundamental_score  \\\n","0    2020-05-19   NVDA  351.61  352.22        0.001735              52.17   \n","1    2020-08-18   NVDA  498.00  490.43       -0.015201              56.94   \n","2    2020-08-19   NVDA  491.86  485.54       -0.012849              56.94   \n","3    2020-08-20   NVDA  479.00  485.64        0.013862              56.94   \n","4    2020-09-15   NVDA  531.20  519.64       -0.021762              56.94   \n","...         ...    ...     ...     ...             ...                ...   \n","1021 2025-04-28   NVDA  109.69  108.73       -0.008752              88.05   \n","1022 2025-04-29   NVDA  107.67  109.02        0.012538              88.05   \n","1023 2025-04-30   NVDA  104.47  108.92        0.042596              88.05   \n","1024 2025-05-01   NVDA  113.08  111.61       -0.013000              88.05   \n","1025 2025-05-02   NVDA  114.18  114.50        0.002803              88.05   \n","\n","      technical_score  news_sentiment_score  composite_score recommendation  \n","0               39.71                 95.38        53.306901           Hold  \n","1               51.52                 95.26        60.169757           Hold  \n","2               50.80                 83.06        58.176493           Hold  \n","3               50.31                 50.00        53.351602           Hold  \n","4               44.25                 96.69        57.501416           Hold  \n","...               ...                   ...              ...            ...  \n","1021            26.08                 33.83        56.001245           Hold  \n","1022            26.09                 67.16        60.674557           Hold  \n","1023            26.00                 47.36        57.865163           Hold  \n","1024            26.45                 68.76        61.040762           Hold  \n","1025            26.95                 63.93        60.561398           Hold  \n","\n","[1026 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-fa5ba1b2-e29c-493d-8775-9a0a6816bb91\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>ticker</th>\n","      <th>open</th>\n","      <th>close</th>\n","      <th>percent_change</th>\n","      <th>fundamental_score</th>\n","      <th>technical_score</th>\n","      <th>news_sentiment_score</th>\n","      <th>composite_score</th>\n","      <th>recommendation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-05-19</td>\n","      <td>NVDA</td>\n","      <td>351.61</td>\n","      <td>352.22</td>\n","      <td>0.001735</td>\n","      <td>52.17</td>\n","      <td>39.71</td>\n","      <td>95.38</td>\n","      <td>53.306901</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-08-18</td>\n","      <td>NVDA</td>\n","      <td>498.00</td>\n","      <td>490.43</td>\n","      <td>-0.015201</td>\n","      <td>56.94</td>\n","      <td>51.52</td>\n","      <td>95.26</td>\n","      <td>60.169757</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-08-19</td>\n","      <td>NVDA</td>\n","      <td>491.86</td>\n","      <td>485.54</td>\n","      <td>-0.012849</td>\n","      <td>56.94</td>\n","      <td>50.80</td>\n","      <td>83.06</td>\n","      <td>58.176493</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-08-20</td>\n","      <td>NVDA</td>\n","      <td>479.00</td>\n","      <td>485.64</td>\n","      <td>0.013862</td>\n","      <td>56.94</td>\n","      <td>50.31</td>\n","      <td>50.00</td>\n","      <td>53.351602</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-09-15</td>\n","      <td>NVDA</td>\n","      <td>531.20</td>\n","      <td>519.64</td>\n","      <td>-0.021762</td>\n","      <td>56.94</td>\n","      <td>44.25</td>\n","      <td>96.69</td>\n","      <td>57.501416</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1021</th>\n","      <td>2025-04-28</td>\n","      <td>NVDA</td>\n","      <td>109.69</td>\n","      <td>108.73</td>\n","      <td>-0.008752</td>\n","      <td>88.05</td>\n","      <td>26.08</td>\n","      <td>33.83</td>\n","      <td>56.001245</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>1022</th>\n","      <td>2025-04-29</td>\n","      <td>NVDA</td>\n","      <td>107.67</td>\n","      <td>109.02</td>\n","      <td>0.012538</td>\n","      <td>88.05</td>\n","      <td>26.09</td>\n","      <td>67.16</td>\n","      <td>60.674557</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>1023</th>\n","      <td>2025-04-30</td>\n","      <td>NVDA</td>\n","      <td>104.47</td>\n","      <td>108.92</td>\n","      <td>0.042596</td>\n","      <td>88.05</td>\n","      <td>26.00</td>\n","      <td>47.36</td>\n","      <td>57.865163</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>1024</th>\n","      <td>2025-05-01</td>\n","      <td>NVDA</td>\n","      <td>113.08</td>\n","      <td>111.61</td>\n","      <td>-0.013000</td>\n","      <td>88.05</td>\n","      <td>26.45</td>\n","      <td>68.76</td>\n","      <td>61.040762</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>1025</th>\n","      <td>2025-05-02</td>\n","      <td>NVDA</td>\n","      <td>114.18</td>\n","      <td>114.50</td>\n","      <td>0.002803</td>\n","      <td>88.05</td>\n","      <td>26.95</td>\n","      <td>63.93</td>\n","      <td>60.561398</td>\n","      <td>Hold</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1026 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa5ba1b2-e29c-493d-8775-9a0a6816bb91')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fa5ba1b2-e29c-493d-8775-9a0a6816bb91 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fa5ba1b2-e29c-493d-8775-9a0a6816bb91');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-f0e83cae-1ec9-45ab-afc1-53142ac12342\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f0e83cae-1ec9-45ab-afc1-53142ac12342')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-f0e83cae-1ec9-45ab-afc1-53142ac12342 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_fe6b6c6a-024c-49b8-8cf3-63b63560c144\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('comp_output')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_fe6b6c6a-024c-49b8-8cf3-63b63560c144 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('comp_output');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"comp_output","summary":"{\n  \"name\": \"comp_output\",\n  \"rows\": 1026,\n  \"fields\": [\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-05-19 00:00:00\",\n        \"max\": \"2025-05-02 00:00:00\",\n        \"num_unique_values\": 1026,\n        \"samples\": [\n          \"2022-12-09 00:00:00\",\n          \"2023-05-11 00:00:00\",\n          \"2022-10-13 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ticker\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"NVDA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 236.91278552799858,\n        \"min\": 87.46,\n        \"max\": 1240.48,\n        \"num_unique_values\": 1006,\n        \"samples\": [\n          138.55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 237.14703516343047,\n        \"min\": 94.31,\n        \"max\": 1224.4,\n        \"num_unique_values\": 1011,\n        \"samples\": [\n          452.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"percent_change\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.028056884078701466,\n        \"min\": -0.10999999999999999,\n        \"max\": 0.15613307715643643,\n        \"num_unique_values\": 1026,\n        \"samples\": [\n          -0.009265734265734293\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fundamental_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.56877342233287,\n        \"min\": 29.22,\n        \"max\": 92.01,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          52.17\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"technical_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27.33660769209383,\n        \"min\": -98.05,\n        \"max\": 97.01,\n        \"num_unique_values\": 914,\n        \"samples\": [\n          26.76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"news_sentiment_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.258700532025626,\n        \"min\": 3.3,\n        \"max\": 97.86,\n        \"num_unique_values\": 900,\n        \"samples\": [\n          41.56\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"composite_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.762019310394518,\n        \"min\": 12.868072904646402,\n        \"max\": 89.95047102421523,\n        \"num_unique_values\": 1026,\n        \"samples\": [\n          33.87487252175808\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recommendation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Hold\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["composite_score_path = f\"/content/drive/My Drive/StockDashboard_Automation/ExportToGitHub/composite_score.csv\"\n","comp_output.to_csv(composite_score_path, index=False)\n","\n","print(f\"Exported Composite Score to {composite_score_path}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y3E_AhPsmZvT","executionInfo":{"status":"ok","timestamp":1746466273225,"user_tz":240,"elapsed":338,"user":{"displayName":"Ashley McConnell","userId":"01186050055383018037"}},"outputId":"bbe7307a-654f-4f60-a3aa-357a6da1e01c"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Exported Composite Score to /content/drive/My Drive/StockDashboard_Automation/ExportToGitHub/composite_score.csv\n"]}]}]}